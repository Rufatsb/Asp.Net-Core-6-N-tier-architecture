// <auto-generated />
using System;
using Emobile_Task.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emobile_Task.DAL.Migrations
{
    [DbContext(typeof(EmobileTaskContext))]
    [Migration("20221023173327_isDeleted")]
    partial class isDeleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Emobile_Task.DAL.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountriesId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Emobile_Task.DAL.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Emobile_Task.DAL.Entities.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CitiesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CitiesId");

                    b.ToTable("Travel", (string)null);
                });

            modelBuilder.Entity("Emobile_Task.DAL.Entities.City", b =>
                {
                    b.HasOne("Emobile_Task.DAL.Entities.Country", "Countries")
                        .WithMany("Cities")
                        .HasForeignKey("CountriesId")
                        .IsRequired()
                        .HasConstraintName("FK_Cities_Countries");

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Emobile_Task.DAL.Entities.Travel", b =>
                {
                    b.HasOne("Emobile_Task.DAL.Entities.City", "Cities")
                        .WithMany("Travels")
                        .HasForeignKey("CitiesId")
                        .IsRequired()
                        .HasConstraintName("FK_Travel_Cities");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Emobile_Task.DAL.Entities.City", b =>
                {
                    b.Navigation("Travels");
                });

            modelBuilder.Entity("Emobile_Task.DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
